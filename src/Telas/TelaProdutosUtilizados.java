/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Telas;

import DAO.AgendamentoProdutoDAO;
import DAO.RelatorioProdutosUtilizados;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Font;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class TelaProdutosUtilizados extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaProdutosUtilizados
     */
    public TelaProdutosUtilizados() {
        initComponents();
        configurarLayoutBonitoProdutosUtilizados();
    // Esconder a coluna "est_cod" (índice 5)
    tabelaProdutos.getColumnModel().getColumn(5).setMinWidth(0);
    tabelaProdutos.getColumnModel().getColumn(5).setMaxWidth(0);
    tabelaProdutos.getColumnModel().getColumn(5).setWidth(0);
    tabelaProdutos.getColumnModel().getColumn(5).setPreferredWidth(0);
        carregarTabelaProdutos();
        personalizarTabelaProdutos();
    }

   public void carregarTabelaProdutos() {
    AgendamentoProdutoDAO dao = new AgendamentoProdutoDAO();
    List<Object[]> lista = dao.listarProdutosUtilizados();

    DefaultTableModel modelo = (DefaultTableModel) tabelaProdutos.getModel();
    modelo.setRowCount(0);  // Limpa a tabela

    for (Object[] linha : lista) {
        modelo.addRow(linha);
    }
}

   private void personalizarTabelaProdutos() {
    // Aumenta a altura das linhas
    tabelaProdutos.setRowHeight(25);

    // Melhora a fonte do cabeçalho
    tabelaProdutos.getTableHeader().setFont(new Font("Arial", Font.BOLD, 14));

    // Melhora a fonte dos dados
    tabelaProdutos.setFont(new Font("Arial", Font.PLAIN, 13));
}

   
   private void pesquisarTabelaProdutos() {
    String pesquisar = txt_busca.getText();
    String campoSelecionado = comboBoxCampo.getSelectedItem().toString();
    String campoBanco = "";

    switch (campoSelecionado) {
        case "Data":
            campoBanco = "a.age_data";
            break;
        case "Cliente":
            campoBanco = "c.cli_nome";
            break;
        case "Serviço":
            campoBanco = "a.age_servico";
            break;
        case "Produto":
            campoBanco = "e.est_nome_item";
            break;
        default:
            JOptionPane.showMessageDialog(null, "Campo inválido.");
            return;
    }

    AgendamentoProdutoDAO dao = new AgendamentoProdutoDAO();
    List<Object[]> lista = dao.pesquisarProdutosUtilizados(campoBanco, pesquisar);

    DefaultTableModel modelo = (DefaultTableModel) tabelaProdutos.getModel();
    modelo.setRowCount(0);

    for (Object[] linha : lista) {
        modelo.addRow(linha);
    }
}


   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        btn_excluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_busca = new javax.swing.JTextField();
        comboBoxCampo = new javax.swing.JComboBox<>();
        btn_relatorio = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Cliente", "Serviço", "Produto", "Codigo do Produto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaProdutos);

        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisar");

        txt_busca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscaKeyReleased(evt);
            }
        });

        comboBoxCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Data", "Cliente", "Serviço", "Produto" }));

        btn_relatorio.setText("Gerar Relatório de Produtos");
        btn_relatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_relatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(btn_excluir)
                        .addGap(31, 31, 31)
                        .addComponent(btn_relatorio))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txt_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_excluir)
                    .addComponent(btn_relatorio))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
          int linhaSelecionada = tabelaProdutos.getSelectedRow();

    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(null, "Selecione um registro para excluir.");
        return;
    }

    int confirmacao = JOptionPane.showConfirmDialog(null, 
        "Tem certeza que deseja excluir o produto utilizado selecionado?", 
        "Confirmação", JOptionPane.YES_NO_OPTION);

    if (confirmacao != JOptionPane.YES_OPTION) {
        return; // Cancelou
    }

    DefaultTableModel modelo = (DefaultTableModel) tabelaProdutos.getModel();

    int age_cod = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
    int est_cod = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 5).toString());

    AgendamentoProdutoDAO dao = new AgendamentoProdutoDAO();
    dao.excluirProdutoUtilizado(age_cod, est_cod);

    JOptionPane.showMessageDialog(null, "Produto utilizado excluído com sucesso.");
    
    carregarTabelaProdutos();

    }//GEN-LAST:event_btn_excluirActionPerformed

    private void txt_buscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscaKeyReleased
        pesquisarTabelaProdutos();
    }//GEN-LAST:event_txt_buscaKeyReleased

    private void btn_relatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_relatorioActionPerformed
        RelatorioProdutosUtilizados relpu = new RelatorioProdutosUtilizados();
        relpu.gerarRelatorioPorPeriodo();
    }//GEN-LAST:event_btn_relatorioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_relatorio;
    private javax.swing.JComboBox<String> comboBoxCampo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTextField txt_busca;
    // End of variables declaration//GEN-END:variables

private void configurarLayoutBonitoProdutosUtilizados() {
    setTitle("Produtos Utilizados nos Agendamentos");

    // Painel principal
    JPanel painelPrincipal = new JPanel(new BorderLayout(15, 15));
    painelPrincipal.setBorder(BorderFactory.createEmptyBorder(15, 20, 15, 20));

    // --- Painel da tabela ---
    JPanel painelTabela = new JPanel(new BorderLayout());
    painelTabela.setBorder(BorderFactory.createTitledBorder(
            BorderFactory.createEtchedBorder(), "Produtos Utilizados"));
    painelTabela.add(jScrollPane1, BorderLayout.CENTER);

    // --- Painel de busca ---
    JPanel painelBusca = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 10));
    painelBusca.setBorder(BorderFactory.createTitledBorder(
            BorderFactory.createEtchedBorder(), "Busca"));
    painelBusca.add(new JLabel("Buscar por:"));
    painelBusca.add(comboBoxCampo);
    txt_busca.setColumns(20); // Largura do campo de busca
    painelBusca.add(txt_busca);

    // --- Painel de botões ---
    JPanel painelBotoes = new JPanel(new FlowLayout(FlowLayout.CENTER, 15, 10));
    painelBotoes.setBorder(BorderFactory.createTitledBorder(
            BorderFactory.createEtchedBorder(), "Ações"));
    painelBotoes.add(btn_excluir);
    painelBotoes.add(btn_relatorio); // <-- Adicionado o botão de relatório

    // --- Painel inferior que junta busca e botões ---
    JPanel painelInferior = new JPanel(new BorderLayout());
    painelInferior.add(painelBusca, BorderLayout.WEST);
    painelInferior.add(painelBotoes, BorderLayout.EAST);

    // --- Montagem geral ---
    painelPrincipal.add(painelTabela, BorderLayout.CENTER);
    painelPrincipal.add(painelInferior, BorderLayout.SOUTH);

    setContentPane(painelPrincipal);
    pack();

    // --- Melhorias visuais simples na tabela ---
    tabelaProdutos.setRowHeight(25);
    tabelaProdutos.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
    tabelaProdutos.setFont(new Font("Segoe UI", Font.PLAIN, 13));
}



}
